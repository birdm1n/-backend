logging:
  config: classpath:logback-spring.xml


spring:
  jwt:
    secret: ZmQ0ZGI5NjQ0MDQwY2I4MjMxY2Y3ZmI3MjdhN2ZmMjNhODViOTg1ZGE0NTBjMGM4NDA5NzYxMjdjOWMwYWRmZTBlZjlhNGY3ZTg4Y2U3YTE1ODVkZDU5Y2Y3OGYwZWE1NzUzNWQ2YjFjZDc0NGMxZWU2MmQ3MjY1NzJmNTE0MzI=
  messages:
    basename: i18n/messages-error

--- #local 환경

server:
  port: 8080

spring:
  profiles: local
  redis:
    host: localhost
    port: 6379
    lettuce:
      pool:
        min-idle: 2
        max-idle: 10
        max-active: 10
  h2:
    console:
      enabled: true
  jpa:
    generate-ddl: true
    show-sql: true
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        use_sql_comments: true
        format_sql: true
      org:
        hibernate:
          envers:
            audit_table_suffix: _history # 히스토리 테이블 suffix 네임 커스텀                      (기본값 : _AUD)
            revision_field_name: rev_id  # _histiry 생성시 rev_info테이블의 외래키 컬럼명 커스텀    (기본값 : REV)
            revision_type_field_name: rev_type  #  rev_type 컬럼명 커스텀                        (기본값 : REVTYPE)
    database-platform: org.hibernate.dialect.H2Dialect
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:daema;
    username: 1000lima
    password: 1000lima
    sql-script-encoding: UTF-8
    schema: classpath:./db/h2/schema.sql
    data: classpath:./db/h2/data.sql
    continue-on-error: true #table, data exists exception ignore
  mail:
    host: smtp.gmail.com
    port: 587
    username:
    password:



--- #test 환경

server:
  port: 8080

spring:
  profiles: test
  redis:
    host: localhost
    port: 6379
    lettuce:
      pool:
        min-idle: 2
        max-idle: 10
        max-active: 10
  jpa:
    generate-ddl: true
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        use_sql_comments: true
        format_sql: true
      org:
        hibernate:
          envers:
            audit_table_suffix: _history # 히스토리 테이블 suffix 네임 커스텀                      (기본값 : _AUD)
            revision_field_name: rev_id  # _histiry 생성시 rev_info테이블의 외래키 컬럼명 커스텀    (기본값 : REV)
            revision_type_field_name: rev_type  #  rev_type 컬럼명 커스텀                        (기본값 : REVTYPE)
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.0.19:3306/daema?characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
    username: daema
    password: eoak123#@!
    sql-script-encoding: UTF-8
#    schema: classpath:./db/mysql/schema.sql
#    data: classpath:./db/mysql/data.sql
    initialization-mode: always
    continue-on-error: true #table, data exists exception ignore
  mail:
    host: smtp.gmail.com
    port: 587
    username:
    password:




--- #stage 환경

server:
  port: 8080

spring:
  profiles: stag
  redis:
    host: skl-mno-live-redis.bpbpqa.0001.apn2.cache.amazonaws.com
    port: 6379
    lettuce:
      pool:
        min-idle: 2
        max-idle: 10
        max-active: 10
  jpa:
    show-sql: true
    properties:
      hibernate:
        use_sql_comments: true
        format_sql: true
      org:
        hibernate:
          envers:
            audit_table_suffix: _history # 히스토리 테이블 suffix 네임 커스텀                      (기본값 : _AUD)
            revision_field_name: rev_id  # _histiry 생성시 rev_info테이블의 외래키 컬럼명 커스텀    (기본값 : REV)
            revision_type_field_name: rev_type  #  rev_type 컬럼명 커스텀                        (기본값 : REVTYPE)
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://skl-mno-live-db.cluster-c1d40i0uxtd9.ap-northeast-2.rds.amazonaws.com:3306/test_sklmnolive?characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
    username: admin
    password: eoakdb123
    sql-script-encoding: UTF-8
  #    schema: classpath:./db/mysql/schema.sql
  #    data: classpath:./db/mysql/data.sql
  #    initialization-mode: always
  #    continue-on-error: true #table, data exists exception ignore
  mail:
    host: smtp.gmail.com
    port: 587
    username:
    password:




--- #prod 환경

server:
  port: 8080

spring:
  profiles: prod
  redis:
    host: skl-mno-live-redis.bpbpqa.0001.apn2.cache.amazonaws.com
    port: 6379
    lettuce:
      pool:
        min-idle: 2
        max-idle: 10
        max-active: 10
  jpa:
    show-sql: true
    properties:
      hibernate:
        use_sql_comments: true
        format_sql: true
      org:
        hibernate:
          envers:
            audit_table_suffix: _history # 히스토리 테이블 suffix 네임 커스텀                      (기본값 : _AUD)
            revision_field_name: rev_id  # _histiry 생성시 rev_info테이블의 외래키 컬럼명 커스텀    (기본값 : REV)
            revision_type_field_name: rev_type  #  rev_type 컬럼명 커스텀                        (기본값 : REVTYPE)
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://skl-mno-live-db.cluster-c1d40i0uxtd9.ap-northeast-2.rds.amazonaws.com:3306/sklmmolive?characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
    username: admin
    password: eoakdb123
    sql-script-encoding: UTF-8
#    schema: classpath:./db/mysql/schema.sql
#    data: classpath:./db/mysql/data.sql
#    initialization-mode: always
#    continue-on-error: true #table, data exists exception ignore
  mail:
    host: smtp.gmail.com
    port: 587
    username:
    password: